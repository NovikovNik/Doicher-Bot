from email import message
import time
import telebot
from user import bulk_insert_new_words_to_db, create_word_object, delete_user_from_db, find_user_in_db, get_user_stats, initial_user_create, get_all_chat_ids, add_new_word_to_db, set_word_status
from utils import check_time_for_post, is_time_between
from word_generator import get_sentense
import schedule
import os
import dotenv
from threading import Thread
from repo.bot_repo import get_questions


dotenv.load_dotenv()
token = os.environ.get('TOKEN')
bot = telebot.TeleBot(token)


def start_pooling():
    """–ó–∞–ø—É—Å–∫ –¥–≤—É—Ö —Ç—Ä–µ–¥–æ–≤, —á—Ç–æ–±—ã —à–µ–¥—É–ª–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
    """
    Thread(target=bot.infinity_polling).start()
    Thread(target=start_job).start()


@bot.message_handler(commands=['start'])
def initialising(message):
    chat = message.chat.id
    user_id = message.from_user.id
    username = message.from_user.first_name
    user = find_user_in_db(user_id)
    if not user:
        bot.reply_to(
            message, f"–ü—Ä–∏–≤–µ—Ç, {username}! –ú—ã —Å —Ç–æ–±–æ–π –µ—â–µ –Ω–∞ –∑–Ω–∞–∫–æ–º—ã.")
        initial_user_create(user_name=user_id, nick=username, chat_id=chat)
        bot.send_message(
            chat_id=chat, text=f"–Ø Doicher üá©üá™. –ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —É—á–∏—Ç—å –Ω–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫. –Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –Ω–æ–≤—ã–µ –Ω–µ–º–µ—Ü–∫–∏–µ —Å–ª–æ–≤–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!")
        return
    bot.reply_to(
        message, f"–ü—Ä–∏–≤–µ—Ç, {username} —Ç—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É' –≤ –º–µ–Ω—é")
    send_word_of_the_day()

@bot.message_handler(commands=['word'])
def get_new_word(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –ø–æ–¥–ø–∏—Å–∏ —Å –ø–∞—Ä–æ–π —Å–ª–æ–≤ –≤–Ω–µ –æ—á–µ—Ä–µ–¥–∏ —à–µ–¥—É–ª–µ—Ä–∞.
    """
    chat_id, message_id = message.chat.id, message.id
    word, fword = get_sentense('German.txt', pic=chat_id)
    with open(f'images/pic_{chat_id}.jpg', 'rb') as f:
        message = bot.send_photo(chat_id=chat_id, photo=f,
                       caption=f'{word}', reply_markup=get_questions())
        # bot.send_poll(chat_id=chat_id,question='choose one',options=['a','b','c'])
        add_new_word_to_db(chat_id=chat_id, word=fword, message_id=message.id)


def send_word_of_the_day():
    if is_time_between(begin_time=(10, 00), end_time=(20, 00)) and check_time_for_post():
        word, f_word = get_sentense('German.txt')
        obj = []
        for i in get_all_chat_ids():
            message = bot.send_photo(chat_id=i, photo=open(
                'images/day_word.jpg', 'rb'), caption=f"{word}", reply_markup=get_questions())
            obj.append(create_word_object(i, f_word, message.id))
        bulk_insert_new_words_to_db(obj)


@bot.message_handler(commands=['stop'])
def get_delete_user(message):
    """–û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Å–µ—Ä–≤–∏—Å–∞.
    """
    user = find_user_in_db(message.from_user.id)
    if not user:
        bot.reply_to(
            message, f"–ü—Ä–∏–≤–µ—Ç! –ú—ã —Å —Ç–æ–±–æ–π –µ—â–µ –Ω–∞ –∑–Ω–∞–∫–æ–º—ã. –ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –º–∏—Ä –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞.")
        return
    delete_user_from_db(message.from_user.id)
    bot.reply_to(message, f"–û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞.")
    return


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    chat, message_id = call.message.chat.id, call.message.id
    if call.data == "yes":
        bot.send_message(
            chat_id=chat, text='Versuchen Sie es noch einmal, vielleicht werden Sie etwas Neues lernen üòå', reply_to_message_id=message_id)
        set_word_status(id=message_id, status=1)
    elif call.data == "no":
        bot.send_message(chat_id=chat, text='–û—Ç–ª–∏—á–Ω–æ. Durch Dornen zu den Sternen üåü',
                         reply_to_message_id=call.message.id)
        set_word_status(id=message_id, status=0)
    bot.edit_message_reply_markup(
        message_id=message_id, reply_markup=None, chat_id=chat)
    

@bot.message_handler(commands=['stat', 'stats', 'statistics'])
def stats(message):
    if find_user_in_db(message.from_user.id):
        stat = get_user_stats(message.from_user.id, week=True)
        bot.send_message(
            chat_id=message.chat.id, text=f"""–í–æ—Ç —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è üò∫: \n
–í—Å–µ–≥–æ —Å–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: {stat.get('all_words')}\n
–ò–∑ –Ω–∏—Ö:
–ò–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ç–µ–±–µ: {stat.get('know_words')}
–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö: {stat.get('unknow_words')}\n
–¢—ã –ø–æ–¥–ø–∏—Å—á–∏–∫ —Å: {stat.get('since')} ‚ù§Ô∏è""")


schedule.every(1).minute.do(send_word_of_the_day)


def start_job():
    while True:
        schedule.run_pending()
        time.sleep(1)
